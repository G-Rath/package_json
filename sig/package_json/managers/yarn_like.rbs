class PackageJson
  module Managers
    class YarnLike < Base
      def initialize: (PackageJson package_json, ?manager_cmd: String) -> self

      def install: (
          ?frozen: bool,
          ?ignore_scripts: bool,
          ?legacy_peer_deps: bool,
          ?omit_optional_deps: bool
        ) -> void

      def add: (
          Array[String] packages,
          ?type: :production | :dev | :optional | :peer,
          ?ignore_scripts: bool,
          ?legacy_peer_deps: bool,
          ?omit_optional_deps: bool
        ) -> void

      def remove: (
          Array[String] packages,
          ?ignore_scripts: bool,
          ?legacy_peer_deps: bool,
          ?omit_optional_deps: bool
        ) -> void

      def run: (
          String script_name,
          ?Array[String] args,
          ?silent: bool
        ) -> void

      private

      def with_native_args: (
          *(String | nil) extra_args,
          ?frozen: bool | nil,
          ?ignore_scripts: bool | nil,
          ?omit_optional_deps: bool | nil,
          ?_unsupported: Array[untyped]
        ) -> Array[String]

      def package_type_install_flag: (Symbol type) -> (String | nil)
    end
  end
end
